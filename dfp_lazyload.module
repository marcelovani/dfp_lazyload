<?php
/**
 * @file
 * Main module file for DFP Lazyload.
 */

/**
 * Implements hook_menu().
 */
function dfp_lazyload_menu() {
  $items = array();
  $items['admin/structure/dfp_ads/lazyload'] = array(
    'title' => 'DFP Lazyload',
    'description' => 'Configure DFP Lazyload.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dfp_lazyload_settings_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 15,
  );

  return $items;
}

/**
 * Implements hook_form().
 */
function dfp_lazyload_settings_form() {
  $form = array();

  // @TODO: Allow more than one slot configuration.
  $form['dfp_lazyload_machinename'] = array(
    '#type' => 'textfield',
    '#title' => t('Ad Slot'),
    '#maxlength' => 255,
    '#default_value' => variable_get('dfp_lazyload_machinename'),
    '#description' => t('Specify which ad slot to load.'),
    '#required' => TRUE,
  );

  $form['dfp_lazyload_frequency'] = array(
    '#type' => 'textfield',
    '#title' => t('Frequency'),
    '#maxlength' => 255,
    '#default_value' => variable_get('dfp_lazyload_frequency', 3),
    '#description' => t('Load a new ad slot every N items.'),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Lazy load callback.
 *
 * @param $ad_slot_machine_name String The machine name of the ad slot.
 */
function dfp_lazyload_load_slot($ad_slot_machine_name) {
  // Add inline script.
  $ad_slot = '';
  if (module_exists('dfp')) {

    $tag = dfp_tag($ad_slot_machine_name);
    if (empty($tag)) {
      drupal_set_message(t('Invalid dfp tag: %name', array('%name' => $ad_slot_machine_name)), 'error');
      return;
    }

    $rendered_tag = render($tag);
    $pieces = array(
      'var googletag\s*=\s*googletag\s.',
      'googletag\.slots\[\"' . $ad_slot_machine_name  . '\"\]\s*=\s*googletag\.define[^\(]*?Slot\(',
      'googletag\.enableServices\(',
    );
    $pattern = '/' . implode('|', $pieces) . '/';
krumo(drupal_add_js());
    // Check for needed JavaScript respecting the key order from $pieces.
    foreach (drupal_add_js() as $key => $value) {
      if (is_numeric($key) && strstr($value['data'], 'googletag')) {
        if (!preg_match($pattern, $value['data'])) {
          continue;
        }
        // Loop again to order the slots.
        foreach ($pieces as $key => $individual_pattern) {
          if (preg_match('/' . $individual_pattern . '/', $value['data'])) {
            $matched_ad_slots[$key] = $value['data'];
            break 1;
          }
        }
      }
    }

    // Sort the array and append values as separate script.
    krumo($matched_ad_slots);
    ksort($matched_ad_slots);
    foreach ($matched_ad_slots as $ad_slot_value) {
      $ad_slot .= '<script type="text/javascript">' . $ad_slot_value . '</script>' . PHP_EOL;
    }

    $ad_slot .= $rendered_tag;

    // Load the ads even if "initial ad load" from dfp module is disabled.
    if (variable_get('dfp_disable_init_load', 1)) {
      $ad_slot = str_ireplace('googletag.pubads().disableInitialLoad();', '', $ad_slot);
    }
  }

  return $ad_slot;
}

/**
 * Implements hook_page_build().
 *
 */
function dfp_lazyload_page_build(&$page) {

  $ad_slot_machine_name = variable_get('dfp_lazyload_machinename');
  $frequency = variable_get('dfp_lazyload_frequency', 3);
  $rendered_slot = dfp_lazyload_load_slot($ad_slot_machine_name, $frequency);

  drupal_add_js(array(
    'dfpLazyload' => array(
      'config' => array(
        'ad_slot_machinename' => $ad_slot_machine_name,
        'frequency' => $frequency,
        'rendered_slot' => $rendered_slot,
      ),
    ),
  ), 'setting');
}
